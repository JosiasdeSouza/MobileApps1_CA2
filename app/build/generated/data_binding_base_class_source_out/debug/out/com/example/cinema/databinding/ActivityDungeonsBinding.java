// Generated by view binder compiler. Do not edit!
package com.example.cinema.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cinema.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDungeonsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView creed31;

  @NonNull
  public final TextView dungeons;

  @NonNull
  public final Button dungeonsBt1;

  @NonNull
  public final Button dungeonsBt2;

  @NonNull
  public final TextView dungeonsDesc;

  @NonNull
  public final ImageView dungeonsImage;

  @NonNull
  public final ImageView uciImage;

  private ActivityDungeonsBinding(@NonNull ConstraintLayout rootView, @NonNull TextView creed31,
      @NonNull TextView dungeons, @NonNull Button dungeonsBt1, @NonNull Button dungeonsBt2,
      @NonNull TextView dungeonsDesc, @NonNull ImageView dungeonsImage,
      @NonNull ImageView uciImage) {
    this.rootView = rootView;
    this.creed31 = creed31;
    this.dungeons = dungeons;
    this.dungeonsBt1 = dungeonsBt1;
    this.dungeonsBt2 = dungeonsBt2;
    this.dungeonsDesc = dungeonsDesc;
    this.dungeonsImage = dungeonsImage;
    this.uciImage = uciImage;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDungeonsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDungeonsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_dungeons, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDungeonsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.creed_3_1;
      TextView creed31 = ViewBindings.findChildViewById(rootView, id);
      if (creed31 == null) {
        break missingId;
      }

      id = R.id.dungeons;
      TextView dungeons = ViewBindings.findChildViewById(rootView, id);
      if (dungeons == null) {
        break missingId;
      }

      id = R.id.dungeons_bt1;
      Button dungeonsBt1 = ViewBindings.findChildViewById(rootView, id);
      if (dungeonsBt1 == null) {
        break missingId;
      }

      id = R.id.dungeons_bt2;
      Button dungeonsBt2 = ViewBindings.findChildViewById(rootView, id);
      if (dungeonsBt2 == null) {
        break missingId;
      }

      id = R.id.dungeons_desc;
      TextView dungeonsDesc = ViewBindings.findChildViewById(rootView, id);
      if (dungeonsDesc == null) {
        break missingId;
      }

      id = R.id.dungeons_image;
      ImageView dungeonsImage = ViewBindings.findChildViewById(rootView, id);
      if (dungeonsImage == null) {
        break missingId;
      }

      id = R.id.uci_image;
      ImageView uciImage = ViewBindings.findChildViewById(rootView, id);
      if (uciImage == null) {
        break missingId;
      }

      return new ActivityDungeonsBinding((ConstraintLayout) rootView, creed31, dungeons,
          dungeonsBt1, dungeonsBt2, dungeonsDesc, dungeonsImage, uciImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
